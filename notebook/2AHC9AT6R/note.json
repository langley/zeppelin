{
  "paragraphs": [
    {
      "text": "%md\n## Welcome to my Spark Hacking Notebook. \n### I\u0027m using it to both learn Zeppelin and Spark, but may add machine learning too",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427420341535_-1997288006",
      "id": "20150326-213901_729061754",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eWelcome to my Spark Hacking Notebook.\u003c/h2\u003e\n\u003ch3\u003eI\u0027m using it to both learn Zeppelin and Spark, but may add machine learning too\u003c/h3\u003e\n"
      },
      "dateCreated": "Mar 26, 2015 9:39:01 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.nio.file.{Paths, Files}\nif (!Files.exists(Paths.get(\"HackData\"))) {\n     import sys.process._\n    //you will need \u0027wget\u0027 to download tool if you don\u0027t have it installed\n    \"wget http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip\" !; \n    \"mkdir HackData \" !; // need \u0027;\u0027 for \u0027!\u0027 to work here\n    \"unzip bank.zip -d HackData\" !;\n    \"rm bank.zip\" !;\n}",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427420427284_104350049",
      "id": "20150326-214027_1521382771",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import java.nio.file.{Paths, Files}\nwarning: there were 4 feature warning(s); re-run with -feature for details\nres27: AnyVal \u003d ()\n"
      },
      "dateCreated": "Mar 26, 2015 9:40:27 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:52 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import sys.process._\n// sc is an existing SparkContext.\nval sqlContext \u003d new org.apache.spark.sql.SQLContext(sc)\n// this is used to implicitly convert an RDD to a DataFrame.\n// import sqlContext.implicits._\n\nval zeppelinHome \u003d (\"pwd\" !!).replace(\"\\n\", \"\")\nval bankText \u003d sc.textFile(s\"$zeppelinHome/HackData/bank-full.csv\")\n\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\n\nval bank \u003d bankText.map(s \u003d\u003e s.split(\";\")).filter(s \u003d\u003e s(0) !\u003d \"\\\"age\\\"\").map(\n    s \u003d\u003e Bank(s(0).toInt, \n            s(1).replaceAll(\"\\\"\", \"\"),\n            s(2).replaceAll(\"\\\"\", \"\"),\n            s(3).replaceAll(\"\\\"\", \"\"),\n            s(5).replaceAll(\"\\\"\", \"\").toInt\n        )\n).toDF()\nbank.registerTempTable(\"bank\")\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427420507556_1321200262",
      "id": "20150326-214147_202963603",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import sys.process._\nsqlContext: org.apache.spark.sql.SQLContext \u003d org.apache.spark.sql.SQLContext@c4abd78\nwarning: there were 1 feature warning(s); re-run with -feature for details\nzeppelinHome: String \u003d /home/langley/lab/zeppelin\nbankText: org.apache.spark.rdd.RDD[String] \u003d /home/langley/lab/zeppelin/HackData/bank-full.csv MapPartitionsRDD[75] at textFile at \u003cconsole\u003e:33\ndefined class Bank\nbank: org.apache.spark.sql.DataFrame \u003d [age: int, job: string, marital: string, education: string, balance: int]\n"
      },
      "dateCreated": "Mar 26, 2015 9:41:47 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:53 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value\nfrom bank \nwhere age \u003c 30\ngroup by age \norder by age",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427420643086_1550711465",
      "id": "20150326-214403_717473458",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n18\t12\n19\t35\n20\t50\n21\t79\n22\t129\n23\t202\n24\t302\n25\t527\n26\t805\n27\t909\n28\t1038\n29\t1185\n"
      },
      "dateCreated": "Mar 26, 2015 9:44:03 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:53 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere age \u003c ${maxage\u003d30} \ngroup by age \norder by age",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "scatterChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false
      },
      "settings": {
        "params": {
          "maxAge": "23",
          "maxage": "50"
        },
        "forms": {
          "maxage": {
            "name": "maxage",
            "defaultValue": "30",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1427420661979_-366076907",
      "id": "20150326-214421_1236266188",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n18\t12\n19\t35\n20\t50\n21\t79\n22\t129\n23\t202\n24\t302\n25\t527\n26\t805\n27\t909\n28\t1038\n29\t1185\n30\t1757\n31\t1996\n32\t2085\n33\t1972\n34\t1930\n35\t1894\n36\t1806\n37\t1696\n38\t1466\n39\t1487\n40\t1355\n41\t1291\n42\t1242\n43\t1161\n44\t1136\n45\t1216\n46\t1175\n47\t1088\n48\t997\n49\t994\n"
      },
      "dateCreated": "Mar 26, 2015 9:44:21 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere marital\u003d\"${marital\u003dsingle,single|divorced|married}\" \ngroup by age ",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "tableHide": false,
        "editorHide": false
      },
      "settings": {
        "params": {
          "marital": "married"
        },
        "forms": {
          "marital": {
            "name": "marital",
            "defaultValue": "single",
            "options": [
              {
                "value": "single"
              },
              {
                "value": "divorced"
              },
              {
                "value": "married"
              }
            ],
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1427420674026_1054431356",
      "id": "20150326-214434_1987933619",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n31\t881\n32\t1007\n33\t1075\n34\t1131\n35\t1077\n36\t1076\n37\t1073\n38\t905\n39\t960\n40\t929\n41\t875\n42\t840\n43\t805\n44\t782\n45\t893\n46\t852\n47\t826\n48\t707\n49\t733\n50\t699\n51\t710\n52\t699\n53\t657\n54\t579\n55\t589\n56\t564\n57\t642\n58\t584\n59\t583\n60\t465\n61\t123\n62\t74\n63\t68\n64\t65\n65\t50\n66\t53\n67\t43\n68\t26\n69\t34\n70\t53\n71\t42\n72\t44\n73\t36\n74\t32\n75\t27\n76\t24\n77\t38\n78\t18\n79\t17\n80\t29\n81\t9\n82\t10\n83\t12\n84\t6\n85\t4\n86\t6\n87\t3\n88\t2\n89\t2\n92\t2\n93\t2\n95\t1\n20\t3\n21\t5\n22\t9\n23\t27\n24\t53\n25\t98\n26\t170\n27\t233\n28\t325\n29\t463\n30\t675\n"
      },
      "dateCreated": "Mar 26, 2015 9:44:34 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n### The following to \"Paragraphs\" show how to do tables programmatically\nThe Zeppelin table widgets aka \"The Display System\" are triggered by println output. Specifically by a \"paragraph\" that starts with a printn(\"%table\"). Consequently, you need to collect up your data as a String in a paragraph before your \"table\" paragaragraph. \n\n##### Note: The Display System is sensitive to spaces! Add a space between the \\n and the ${dataAsString} and see what happens to the table when plotted as a histogram.",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {
          "dataAsString": {
            "name": "dataAsString",
            "defaultValue": "",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1427642895728_1825591071",
      "id": "20150329-112815_548653699",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eThe following to \u0026ldquo;Paragraphs\u0026rdquo; show how to do tables programmatically\u003c/h3\u003e\n\u003cp\u003eThe Zeppelin table widgets aka \u0026ldquo;The Display System\u0026rdquo; are triggered by println output. Specifically by a \u0026ldquo;paragraph\u0026rdquo; that starts with a printn(\u0026ldquo;%table\u0026rdquo;). Consequently, you need to collect up your data as a String in a paragraph before your \u0026ldquo;table\u0026rdquo; paragaragraph.\u003c/p\u003e\n\u003ch5\u003eNote: The Display System is sensitive to spaces! Add a space between the \\n and the ${dataAsString} and see what happens to the table when plotted as a histogram.\u003c/h5\u003e\n"
      },
      "dateCreated": "Mar 29, 2015 11:28:15 AM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\n\nval dataAsString \u003d z.sqlContext.sql(\"select age, count(1) value from bank where age \u003c 30 group by age order by age\").collect.map( r \u003d\u003e s\"${r.getInt(0)}\\t${r.getLong(1)}\\n\").mkString\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427573436207_-1292358634",
      "id": "20150328-161036_1418333625",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "dataAsString: String \u003d \n\"18\t12\n19\t35\n20\t50\n21\t79\n22\t129\n23\t202\n24\t302\n25\t527\n26\t805\n27\t909\n28\t1038\n29\t1185\n\"\n"
      },
      "dateCreated": "Mar 28, 2015 4:10:36 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:55 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(s\"%table age\\tvalue\\n${dataAsString}\")\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427642375506_-1601521148",
      "id": "20150329-111935_1902404157",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "age\tvalue\n18\t12\n19\t35\n20\t50\n21\t79\n22\t129\n23\t202\n24\t302\n25\t527\n26\t805\n27\t909\n28\t1038\n29\t1185\n\n"
      },
      "dateCreated": "Mar 29, 2015 11:19:35 AM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:55 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Hack again soon!\n",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "tableHide": false,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427420601227_1684726675",
      "id": "20150326-214321_771696009",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eHack again soon!\u003c/h2\u003e\n"
      },
      "dateCreated": "Mar 26, 2015 9:43:21 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:51 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1427420876966_85909461",
      "id": "20150326-214756_41525802",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT"
      },
      "dateCreated": "Mar 26, 2015 9:47:56 PM",
      "dateStarted": "Mar 29, 2015 11:56:51 AM",
      "dateFinished": "Mar 29, 2015 11:56:55 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Learning Spark",
  "id": "2AHC9AT6R",
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}